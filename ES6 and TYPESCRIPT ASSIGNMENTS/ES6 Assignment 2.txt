Q1.
Ans.
class Fib implements IterableIterator<number>
 {  protected fn1 = 0; 
   protected fn2 = 1; 
    constructor(protected maxValue?: number) {} public next(): IteratorResult<number> {  
          var current = this.fn1;  
            this.fn1 = this.fn2;   
             this.fn2 = current + this.fn1;  
               if (this.maxValue != null && current >= this.maxValue) 
               {     
                  return {     
                       done: true,   
                            value: null    
                            }     
                          }    
                           return {   
                                done: false,   
                                   value: current    
                                  }  } 
                                    [Symbol.iterator](): IterableIterator<number> {    
                                      return this;  
                                    }}
                                    let fib = new Fib();
                                    fib.next() //{ done: false, value: 0 }
                                    fib.next() //{ done: false, value: 1 }
                                    fib.next() //{ done: false, value: 1 }
                                    fib.next() //{ done: false, value: 2 }
                                    fib.next() //{ done: false, value: 3 }
                                    fib.next() //{ done: false, value: 5 }
                                    let fibMax50 = new Fib(50);
                                    console.log(Array.from(fibMax50)); // [ 0, 1, 1, 2, 3, 5, 8, 13, 21, 34 ]
                                    let fibMax21 = new Fib(21);
                                    for(let num of fibMax21) 
                                    {  console.log(num); //Prints fibonacci sequence 0 to 21}


Q2.
ANS. function getArmstrongNumber() 
{
 var n=4;
 for (var i = 1; i < 10; ++i) 
 {
   for (var j = 0; j < 10; ++j) 
     {
        for (var k = 0; k < 10; ++k)
        {
          for (var l = 0; l < 10; ++l){
          var pow = (Math.pow(i,n) + Math.pow(j,n) + Math.pow(k,n) + Math.pow(l,n));
          var plus = (i * 1000 + j * 100 +  k * 10 + l);
          if (pow == plus) 
           {     
             console.log(pow);
            }
          }
         }
       }
    }
  }
getArmstrongNumber();


Q3.
Ans.
function *getArmstrongNumber() 
{
  yield 1;
 var n=4;
 for (var i = 1; i < 10; ++i) 
 {
   for (var j = 0; j < 10; ++j) 
     {
        for (var k = 0; k < 10; ++k)
        {
          for (var l = 0; l < 10; ++l){
          var pow = (Math.pow(i,n) + Math.pow(j,n) + Math.pow(k,n) + Math.pow(l,n));
          var plus = (i * 1000 + j * 100 +  k * 10 + l);
          if (pow == plus) 
           {     
             console.log(pow);
            }
          }
         }
       }
    }
  }
let myGen = getArmstrongNumber();
console.log(myGen.next());
console.log(myGen.next());


